{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahfh/Desktop/Nujoom12_3bood_fixed/src/components/StatsRadarChart.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsRadarChart = ({\n  attributes,\n  data,\n  compareData\n}) => {\n  // Determine if this is a comparison chart\n  const isComparisonChart = !!compareData;\n\n  // Use either provided data or attributes in the appropriate format\n  const primaryData = data || (attributes ? attributes.map(attr => ({\n    name: attr.name,\n    value: attr.value\n  })) : []);\n\n  // Calculate the coordinates for a radar chart point\n  const calculatePoint = (value, total, angle) => {\n    // Scale value between 0 and 1\n    const scaledValue = value / 100;\n    // Calculate distance from center based on value (0-1)\n    const distance = scaledValue * 80;\n    // Convert angle to radians\n    const radians = angle * (Math.PI / 180);\n    // Calculate x,y coordinates (center is at 100,100)\n    const x = 100 + distance * Math.sin(radians);\n    const y = 100 - distance * Math.cos(radians);\n    return {\n      x,\n      y\n    };\n  };\n\n  // Generate points for the radar chart polygon\n  const generatePolygonPoints = dataPoints => {\n    if (!dataPoints || dataPoints.length === 0) return '';\n\n    // Calculate angle step based on number of data points\n    const angleStep = 360 / dataPoints.length;\n\n    // Generate points string\n    return dataPoints.map((item, index) => {\n      const angle = index * angleStep;\n      const point = calculatePoint(item.value, 100, angle);\n      return `${point.x},${point.y}`;\n    }).join(' ');\n  };\n\n  // Primary data points\n  const primaryPoints = generatePolygonPoints(primaryData);\n\n  // Comparison data points (if provided)\n  const comparisonPoints = isComparisonChart ? generatePolygonPoints(compareData) : '';\n\n  // Generate the axis and labels\n  const renderAxis = () => {\n    const data = primaryData;\n    if (!data || data.length === 0) return null;\n    const angleStep = 360 / data.length;\n    return data.map((item, index) => {\n      const angle = index * angleStep;\n      const endPoint = calculatePoint(100, 100, angle);\n\n      // Calculate label position (slightly beyond the chart boundary)\n      const labelPoint = calculatePoint(110, 100, angle);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"100\",\n          y1: \"100\",\n          x2: endPoint.x,\n          y2: endPoint.y,\n          stroke: \"#e5e7eb\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: labelPoint.x,\n          y: labelPoint.y,\n          fontSize: \"10\",\n          fill: \"#4b5563\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Generate concentric circles for the background grid\n  const renderGrid = () => {\n    const circles = [20, 40, 60, 80];\n    return circles.map((radius, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"100\",\n      cy: \"100\",\n      r: radius,\n      fill: \"none\",\n      stroke: \"#e5e7eb\",\n      strokeWidth: \"1\",\n      strokeDasharray: \"2,2\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 200 200\",\n      className: \"w-full h-full\",\n      children: [renderGrid(), renderAxis(), isComparisonChart && comparisonPoints && /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: comparisonPoints,\n        fill: \"rgba(34, 197, 94, 0.2)\",\n        stroke: \"#10b981\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), primaryPoints && /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: primaryPoints,\n        fill: isComparisonChart ? \"rgba(59, 130, 246, 0.2)\" : \"rgba(16, 185, 129, 0.2)\",\n        stroke: isComparisonChart ? \"#3b82f6\" : \"#10b981\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), isComparisonChart && /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"140\",\n          y: \"10\",\n          width: \"10\",\n          height: \"10\",\n          fill: \"rgba(59, 130, 246, 0.2)\",\n          stroke: \"#3b82f6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"155\",\n          y: \"18\",\n          fontSize: \"8\",\n          fill: \"#4b5563\",\n          dominantBaseline: \"middle\",\n          children: data && data[0] ? data[0].player : 'لاعب 1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"140\",\n          y: \"25\",\n          width: \"10\",\n          height: \"10\",\n          fill: \"rgba(34, 197, 94, 0.2)\",\n          stroke: \"#10b981\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"155\",\n          y: \"33\",\n          fontSize: \"8\",\n          fill: \"#4b5563\",\n          dominantBaseline: \"middle\",\n          children: compareData && compareData[0] ? compareData[0].player : 'لاعب 2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_c = StatsRadarChart;\nexport default StatsRadarChart;\nvar _c;\n$RefreshReg$(_c, \"StatsRadarChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StatsRadarChart","attributes","data","compareData","isComparisonChart","primaryData","map","attr","name","value","calculatePoint","total","angle","scaledValue","distance","radians","Math","PI","x","sin","y","cos","generatePolygonPoints","dataPoints","length","angleStep","item","index","point","join","primaryPoints","comparisonPoints","renderAxis","endPoint","labelPoint","Fragment","children","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fill","textAnchor","dominantBaseline","renderGrid","circles","radius","cx","cy","r","strokeDasharray","className","viewBox","points","width","height","player","_c","$RefreshReg$"],"sources":["/Users/abdullahfh/Desktop/Nujoom12_3bood_fixed/src/components/StatsRadarChart.jsx"],"sourcesContent":["import React from 'react';\n\nconst StatsRadarChart = ({ attributes, data, compareData }) => {\n  // Determine if this is a comparison chart\n  const isComparisonChart = !!compareData;\n  \n  // Use either provided data or attributes in the appropriate format\n  const primaryData = data || (attributes ? attributes.map(attr => ({ name: attr.name, value: attr.value })) : []);\n  \n  // Calculate the coordinates for a radar chart point\n  const calculatePoint = (value, total, angle) => {\n    // Scale value between 0 and 1\n    const scaledValue = value / 100;\n    // Calculate distance from center based on value (0-1)\n    const distance = scaledValue * 80;\n    // Convert angle to radians\n    const radians = angle * (Math.PI / 180);\n    // Calculate x,y coordinates (center is at 100,100)\n    const x = 100 + distance * Math.sin(radians);\n    const y = 100 - distance * Math.cos(radians);\n    return { x, y };\n  };\n  \n  // Generate points for the radar chart polygon\n  const generatePolygonPoints = (dataPoints) => {\n    if (!dataPoints || dataPoints.length === 0) return '';\n    \n    // Calculate angle step based on number of data points\n    const angleStep = 360 / dataPoints.length;\n    \n    // Generate points string\n    return dataPoints.map((item, index) => {\n      const angle = index * angleStep;\n      const point = calculatePoint(item.value, 100, angle);\n      return `${point.x},${point.y}`;\n    }).join(' ');\n  };\n  \n  // Primary data points\n  const primaryPoints = generatePolygonPoints(primaryData);\n  \n  // Comparison data points (if provided)\n  const comparisonPoints = isComparisonChart ? generatePolygonPoints(compareData) : '';\n  \n  // Generate the axis and labels\n  const renderAxis = () => {\n    const data = primaryData;\n    if (!data || data.length === 0) return null;\n    \n    const angleStep = 360 / data.length;\n    \n    return data.map((item, index) => {\n      const angle = index * angleStep;\n      const endPoint = calculatePoint(100, 100, angle);\n      \n      // Calculate label position (slightly beyond the chart boundary)\n      const labelPoint = calculatePoint(110, 100, angle);\n      \n      return (\n        <React.Fragment key={index}>\n          <line \n            x1=\"100\" \n            y1=\"100\" \n            x2={endPoint.x} \n            y2={endPoint.y} \n            stroke=\"#e5e7eb\" \n            strokeWidth=\"1\" \n          />\n          <text \n            x={labelPoint.x} \n            y={labelPoint.y} \n            fontSize=\"10\"\n            fill=\"#4b5563\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n          >\n            {item.name}\n          </text>\n        </React.Fragment>\n      );\n    });\n  };\n  \n  // Generate concentric circles for the background grid\n  const renderGrid = () => {\n    const circles = [20, 40, 60, 80];\n    return circles.map((radius, index) => (\n      <circle \n        key={index}\n        cx=\"100\" \n        cy=\"100\" \n        r={radius} \n        fill=\"none\" \n        stroke=\"#e5e7eb\" \n        strokeWidth=\"1\" \n        strokeDasharray=\"2,2\"\n      />\n    ));\n  };\n  \n  return (\n    <div className=\"w-full h-full relative\">\n      <svg viewBox=\"0 0 200 200\" className=\"w-full h-full\">\n        {/* Background grid */}\n        {renderGrid()}\n        \n        {/* Axes */}\n        {renderAxis()}\n        \n        {/* Player comparison polygon */}\n        {isComparisonChart && comparisonPoints && (\n          <polygon \n            points={comparisonPoints} \n            fill=\"rgba(34, 197, 94, 0.2)\" \n            stroke=\"#10b981\" \n            strokeWidth=\"2\" \n          />\n        )}\n        \n        {/* Main player polygon */}\n        {primaryPoints && (\n          <polygon \n            points={primaryPoints} \n            fill={isComparisonChart ? \"rgba(59, 130, 246, 0.2)\" : \"rgba(16, 185, 129, 0.2)\"} \n            stroke={isComparisonChart ? \"#3b82f6\" : \"#10b981\"} \n            strokeWidth=\"2\" \n          />\n        )}\n        \n        {/* Legend for comparison */}\n        {isComparisonChart && (\n          <g>\n            <rect x=\"140\" y=\"10\" width=\"10\" height=\"10\" fill=\"rgba(59, 130, 246, 0.2)\" stroke=\"#3b82f6\" />\n            <text x=\"155\" y=\"18\" fontSize=\"8\" fill=\"#4b5563\" dominantBaseline=\"middle\">{data && data[0] ? data[0].player : 'لاعب 1'}</text>\n            \n            <rect x=\"140\" y=\"25\" width=\"10\" height=\"10\" fill=\"rgba(34, 197, 94, 0.2)\" stroke=\"#10b981\" />\n            <text x=\"155\" y=\"33\" fontSize=\"8\" fill=\"#4b5563\" dominantBaseline=\"middle\">{compareData && compareData[0] ? compareData[0].player : 'لاعب 2'}</text>\n          </g>\n        )}\n      </svg>\n    </div>\n  );\n};\n\nexport default StatsRadarChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}